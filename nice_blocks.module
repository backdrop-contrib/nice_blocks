<?php

/**
 * Implements hook_menu().
 */
function nice_blocks_menu() {
  $items['nice_blocks/autocomplete'] = array(
    'title' => 'Node autocomplete',
    'page callback' => 'nice_blocks_autocomplete',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'nice_blocks.pages.inc',
  );

  return $items;
}

/**
 * Implements hook_block_info().
 */
function nice_blocks_block_info() {
  $blocks['content'] = array(
    'info' => t('Content block'),
    'description' => t('Displays a node in a block.'),
    'class' => 'NiceBlock',
  );
  return $blocks;
}

/**
 * Implements hook_autoload_info().
 */
function nice_blocks_autoload_info() {
  return array(
    'NiceBlock' => 'nice_blocks.block.inc',
  );
}

/**
 * Implements hook_entity_info_alter().
 * Add the 'Block' view mode for nodes.
 */
function nice_blocks_entity_info_alter(&$info) {
  $info['node']['view modes'] += array(
    'block' => array(
      'label' => t('Block'),
      'custom settings' => FALSE,
    ),
  );
}

/**
 * Implements hook_preprocess_node().
 */
function nice_blocks_preprocess_node(&$variables) {
  if (!empty($variables['elements']['#content_block_id'])) {
    $variables['classes'][] = 'nice-content-block';

    if (!empty($variables['page']) && !empty($variables['elements']['#content_block_title'])) {
      $variables['page'] = false;
    }

    if (!$variables['elements']['#content_block_more']) {
      unset ($variables['content']['links']['node']);
    }

    if (!$variables['elements']['#content_block_comments']) {
      unset ($variables['content']['links']['comment']);
    }

    if (!$variables['elements']['#content_block_submitted']) {
      $variables['display_submitted'] = FALSE;
    }
    else {
      $variables['display_submitted'] = TRUE;
    }

    if (empty($variables['title'])) {
    // hide the empty <h2>
      $variables['title_prefix'] = '<div style="display: none;">';
      $variables['title_suffix'] = '</div>';
    }
  }
}
